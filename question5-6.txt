Question 5:

If a robot that has just finished a task is immediately assigned a new task, this could create an infinte loop of the
robot completing its task and starting again. If this occurs, there is a possibility of the the other robots never being 
able to start their task and the program not ending. Another possible cause to this problem would be the assignment of a 
new task prior to the completion of the task, i.e. the robot must continue to do tasks until the program is eventually 
aborted. A possible solution to the first problem would be to ensure that any robot beginning a task has not yet completed 
its task. This can be done most simply through the use of a conditional statement that determines if the robot has 
completed its task prior to starting. 

Another possible issue would be with the assignment of a problem at the same time causing unexpected outputs, such as 
combining different print statments. A solution to the second problem would be the implimentation of resource sharing 
techniques (mutual exclusion) in order to prevent the odd behaviors and outputs. This would also prevent the robots
from possibly both thinking they have been able to pick up their tools and complete their tasks when one hasn't actually 
picked up its tools.